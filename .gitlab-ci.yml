stages:
  - build

variables:
  CLONE_SSH: git@git.deligram.com:dgfront/web-spa.git
  BRANCH_NAME: $CI_COMMIT_REF_NAME
  TAG: $CI_COMMIT_TAG
  HARBOR_PROJECT: harbor.deligram.com/flash/flash-app

build:
  stage: build
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /^\[DEPLOY\]/
      - $CI_COMMIT_REF_NAME =~ /master/
  image: docker:18.06.2
  services:
    - docker:18.06.2-dind
  before_script:
    - apk add --no-cache --update git
    - apk add --no-cache --update curl
    - 'which ssh-agent || ( apk update && apk add openssh-client )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "StrictHostKeyChecking no " > ~/.ssh/config
    - ssh-keyscan git.deligram.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - mkdir -p code
    - cd code
    - git init
    - git remote add origin $CLONE_SSH
    - git fetch origin
    - git checkout -b $BRANCH_NAME --track origin/$BRANCH_NAME
    - echo "$SPA_ENV" > "$(pwd)/.env"
    - cat $(pwd)/.env
    - ls -la
    - export SHORT_SHA="$(git rev-parse --short $CI_COMMIT_SHA)"
    - echo "SHORT_SHA=\"$SHORT_SHA\"" >> ../variables

  script:
    - echo $SHORT_SHA
    - docker build .
      -f ./devops/Dockerfile
      -t ${HARBOR_PROJECT}:$CI_COMMIT_REF_NAME-$SHORT_SHA
    - docker login -u ${HARBOR_USER} -p "${HARBOR_PASSWORD}" harbor.deligram.com
    - docker push ${HARBOR_PROJECT}:$CI_COMMIT_REF_NAME-$SHORT_SHA
    - echo ${HARBOR_PROJECT}:$CI_COMMIT_REF_NAME-$SHORT_SHA

